// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vilau_Paula_Proiect.Data;

#nullable disable

namespace ToyStore.Migrations
{
    [DbContext(typeof(ToyStoreContext))]
    [Migration("20240112180637_user2")]
    partial class user2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.HasIndex("CityId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Order", b =>
                {
                    b.Property<int?>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("OrderID"));

                    b.Property<string>("ClientEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.OrderedToy", b =>
                {
                    b.Property<int?>("ToyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ToyID", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedToys");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToyId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ToyId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.HasIndex("CityId");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Toy", b =>
                {
                    b.Property<int>("ToyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToyID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ToyID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Toy", (string)null);
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Client", b =>
                {
                    b.HasOne("Vilau_Paula_Proiect.Models.City", "City")
                        .WithMany("Clients")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.OrderedToy", b =>
                {
                    b.HasOne("Vilau_Paula_Proiect.Models.Order", "Order")
                        .WithMany("OrderedToys")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vilau_Paula_Proiect.Models.Toy", "Toy")
                        .WithMany("OrderedToys")
                        .HasForeignKey("ToyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Review", b =>
                {
                    b.HasOne("Vilau_Paula_Proiect.Models.Client", "Client")
                        .WithMany("Reviews")
                        .HasForeignKey("ClientId");

                    b.HasOne("Vilau_Paula_Proiect.Models.Toy", "Toy")
                        .WithMany("Reviews")
                        .HasForeignKey("ToyId");

                    b.Navigation("Client");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Supplier", b =>
                {
                    b.HasOne("Vilau_Paula_Proiect.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Toy", b =>
                {
                    b.HasOne("Vilau_Paula_Proiect.Models.Category", "Category")
                        .WithMany("Toys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vilau_Paula_Proiect.Models.Supplier", "Supplier")
                        .WithMany("Toys")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Category", b =>
                {
                    b.Navigation("Toys");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.City", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Client", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Order", b =>
                {
                    b.Navigation("OrderedToys");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Supplier", b =>
                {
                    b.Navigation("Toys");
                });

            modelBuilder.Entity("Vilau_Paula_Proiect.Models.Toy", b =>
                {
                    b.Navigation("OrderedToys");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
